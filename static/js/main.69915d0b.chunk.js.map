{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","todos","setTodos","textInputing","setTextInputing","className","id","onSubmit","e","preventDefault","inputedText","text","key","Date","now","complited","concat","console","log","type","placeholder","value","onChange","target","length","map","todo","classes","push","toggledTodo","item","toggleComplete","join","changedText","changeValue","onClick","deleteItem","filter","deleteTodo","style","cursor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAsGeA,MAnGf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KA0CA,OACE,sBAAKC,UAAU,MAAf,UACE,iCACE,uBAAMC,GAAG,aAAaC,SA3C5B,SAAiBC,GACfA,EAAEC,iBACF,IAAMC,EAAc,CAClBC,KAAMR,EACNS,IAAKC,KAAKC,MACVC,WAAW,GAEbb,EAAS,YAAID,GAAOe,OAAON,IAC3BO,QAAQC,IAAIjB,GAEZG,EAAgB,KAiCZ,UACE,uBACEe,KAAK,OACLC,YAAY,aACZC,MAAOlB,EACPmB,SAAU,SAACd,GAAD,OAAOJ,EAAgBI,EAAEe,OAAOF,UAE5C,wBAAQF,KAAK,SAAb,2BAGJ,8BACGlB,EAAMuB,OACLvB,EAAMwB,KAAI,SAACC,GACT,IAAMC,EAAU,GAIhB,OAHID,EAAKX,WACPY,EAAQC,KAAK,QAGb,qBAAKvB,UAAU,OAAf,SACE,8BACE,uBACEC,GAAG,QACHgB,SAAU,kBA/C5B,SAAwBV,GAEtB,IAAMiB,EAAc,YAAI5B,GAAOwB,KAAI,SAACK,GAIlC,OAHIA,EAAKlB,MAAQA,IACfkB,EAAKf,WAAae,EAAKf,WAElBe,KAET5B,EAAS2B,GAuCuBE,CAAeL,EAAKd,MACpCO,KAAK,aAEP,uBACEb,GAAG,OACHa,KAAK,OACLd,UAAWsB,EAAQK,KAAK,KACxBV,SAAU,SAACd,GAAD,OA3C5B,SAAqBG,EAAMC,GACzB,IAAMqB,EAAW,YAAOhC,GAExBgC,EAAYR,KAAI,SAACK,GACXA,EAAKlB,MAAQA,IACfkB,EAAKnB,KAAOA,MAGhBT,EAAS+B,GAmCwBC,CAAY1B,EAAEe,OAAOF,MAAOK,EAAKd,MAClDS,MAAOK,EAAKf,OAEd,sBACEwB,QAAS,kBA/D3B,SAAoBvB,GAClB,IAAMwB,EAAa,YAAInC,GAAOoC,QAAO,SAACP,GAAD,OAAUA,EAAKlB,MAAQA,KAC5DV,EAASkC,GA6DsBE,CAAWZ,EAAKd,MAC/B2B,MAAO,CAAEC,OAAQ,WAFnB,qBAduBd,EAAKd,QAyBpC,8BACE,oBAAI2B,MAAO,CAAEE,MAAO,SAApB,8BClFGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.69915d0b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([])\r\n  const [textInputing, setTextInputing] = useState('')\r\n\r\n  function addTodo(e) {\r\n    e.preventDefault()\r\n    const inputedText = {\r\n      text: textInputing,\r\n      key: Date.now(),\r\n      complited: false,\r\n    }\r\n    setTodos([...todos].concat(inputedText))\r\n    console.log(todos)\r\n\r\n    setTextInputing('')\r\n  }\r\n\r\n  function deleteTodo(key) {\r\n    const deleteItem = [...todos].filter((item) => item.key !== key)\r\n    setTodos(deleteItem)\r\n  }\r\n\r\n  function toggleComplete(key) {\r\n    // eslint-disable-next-line\r\n    const toggledTodo = [...todos].map((item) => {\r\n      if (item.key === key) {\r\n        item.complited = !item.complited\r\n      }\r\n      return item\r\n    })\r\n    setTodos(toggledTodo)\r\n  }\r\n\r\n  function changeValue(text, key) {\r\n    const changedText = [...todos]\r\n    // eslint-disable-next-line\r\n    changedText.map((item) => {\r\n      if (item.key === key) {\r\n        item.text = text\r\n      }\r\n    })\r\n    setTodos(changedText)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <form id=\"to-do-form\" onSubmit={addTodo}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add a todo\"\r\n            value={textInputing}\r\n            onChange={(e) => setTextInputing(e.target.value)}\r\n          />\r\n          <button type=\"submit\">Add todo</button>\r\n        </form>\r\n      </header>\r\n      <div>\r\n        {todos.length ? (\r\n          todos.map((todo) => {\r\n            const classes = []\r\n            if (todo.complited) {\r\n              classes.push('done')\r\n            }\r\n            return (\r\n              <div className=\"list\" key={todo.key}>\r\n                <p>\r\n                  <input\r\n                    id=\"check\"\r\n                    onChange={() => toggleComplete(todo.key)}\r\n                    type=\"checkbox\"\r\n                  />\r\n                  <input\r\n                    id=\"text\"\r\n                    type=\"text\"\r\n                    className={classes.join(' ')}\r\n                    onChange={(e) => changeValue(e.target.value, todo.key)}\r\n                    value={todo.text}\r\n                  />\r\n                  <span\r\n                    onClick={() => deleteTodo(todo.key)}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    [x]\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            )\r\n          })\r\n        ) : (\r\n          <div>\r\n            <h1 style={{ color: 'white' }}>No todos</h1>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}